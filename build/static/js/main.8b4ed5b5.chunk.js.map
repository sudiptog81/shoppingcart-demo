{"version":3,"sources":["serviceWorker.js","components/navbar.jsx","components/counter.jsx","components/counters.jsx","App.js","index.js"],"names":["Boolean","window","location","hostname","match","NavBar","_ref","items","console","log","react_default","a","createElement","AppBar_default","position","color","Toolbar_default","Typography_default","variant","IconButton_default","Badge_default","badgeContent","ShoppingCart_default","Counter","_this","this","Fragment","style","margin","fontFamily","props","counter","id","getBadgeClasses","formatCount","Button_default","onClick","onIncrement","size","onDelete","Delete_default","classes","value","Component","Counters","_this$props","counters","onReset","onAdd","map","components_counter","key","App","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","handleIncrement","toConsumableArray","index","indexOf","objectSpread","setState","handleDelete","filter","c","handleReset","handleAdd","concat","length","navbar","components_counters","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8b4ed5b5.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Badge from \"@material-ui/core/Badge\";\r\nimport ShoppingCartIcon from \"@material-ui/icons/ShoppingCart\";\r\n\r\n// Stateless functional component sfc\r\n\r\nconst NavBar = ({ items }) => {\r\n  console.log(\"NavBar rendered\");\r\n\r\n  return (\r\n    <div>\r\n      <AppBar position=\"static\" color=\"default\">\r\n        <Toolbar>\r\n          <Typography variant=\"h6\" color=\"inherit\">\r\n            Your Cart\r\n          </Typography>\r\n          &nbsp;\r\n          <IconButton>\r\n            <Badge badgeContent={items} color=\"primary\">\r\n              <ShoppingCartIcon />\r\n            </Badge>\r\n          </IconButton>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n};\r\n\r\n// class NavBar extends Component {\r\n//   render() {\r\n//   }\r\n// }\r\n\r\nexport default NavBar;\r\n","import React, { Component } from \"react\";\r\nimport Badge from \"@material-ui/core/Badge\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nclass Counter extends Component {\r\n  componentDidUpdate() {\r\n    console.log(\"Counter updated\");\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    console.log(\"Counter unmounted\");\r\n  }\r\n\r\n  render() {\r\n    console.log(\"Counter rendered\");\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <span style={{ margin: 20, fontFamily: \"Roboto\" }}>\r\n          Product #{this.props.counter.id}\r\n        </span>\r\n        <Badge\r\n          style={{ margin: 20 }}\r\n          color={this.getBadgeClasses()}\r\n          badgeContent={this.formatCount()}\r\n        >\r\n          <span />\r\n        </Badge>\r\n        <Button\r\n          style={{ margin: 20 }}\r\n          variant=\"contained\"\r\n          onClick={() => this.props.onIncrement(this.props.counter)}\r\n          size=\"small\"\r\n        >\r\n          Add to Cart\r\n        </Button>\r\n        <IconButton\r\n          variant=\"contained\"\r\n          color=\"secondary\"\r\n          onClick={() => this.props.onDelete(this.props.counter.id)}\r\n          size=\"small\"\r\n        >\r\n          <DeleteIcon />\r\n        </IconButton>\r\n        <br />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n\r\n  getBadgeClasses() {\r\n    let classes = \"\";\r\n    classes += this.props.counter.value === 0 ? \"error\" : \"primary\";\r\n    return classes;\r\n  }\r\n\r\n  formatCount() {\r\n    const { value } = this.props.counter;\r\n    return value === 0 ? 0 : value;\r\n  }\r\n}\r\n\r\nexport default Counter;\r\n","import React, { Component } from \"react\";\r\nimport Counter from \"./counter\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nclass Counters extends Component {\r\n  render() {\r\n    console.log(\"Counters rendered\");\r\n\r\n    const { counters, onReset, onDelete, onIncrement, onAdd } = this.props;\r\n\r\n    return (\r\n      <div>\r\n        {counters.map(counter => (\r\n          <Counter\r\n            key={counter.id}\r\n            onDelete={onDelete}\r\n            onIncrement={onIncrement}\r\n            counter={counter}\r\n          />\r\n        ))}\r\n        <Button\r\n          style={{ margin: 20 }}\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          size=\"small\"\r\n          onClick={onAdd}\r\n        >\r\n          Add Item\r\n        </Button>\r\n        <Button\r\n          style={{ margin: 20 }}\r\n          variant=\"contained\"\r\n          color=\"secondary\"\r\n          size=\"small\"\r\n          onClick={onReset}\r\n        >\r\n          Reset\r\n        </Button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Counters;\r\n","import React, { Component } from \"react\";\nimport NavBar from \"./components/navbar\";\nimport Counters from \"./components/counters\";\nimport \"./App.css\";\nclass App extends Component {\n  state = {\n    counters: [\n      { id: 1, value: 4 },\n      { id: 2, value: 0 },\n      { id: 3, value: 0 },\n      { id: 4, value: 0 },\n      { id: 5, value: 1 }\n    ]\n  };\n\n  constructor() {\n    super();\n    console.log(\"app constructor\");\n  }\n\n  componentDidMount() {\n    // AJAX call\n    console.log(\"app mounted\");\n  }\n\n  handleIncrement = id => {\n    const counters = [...this.state.counters];\n    const index = counters.indexOf(id);\n    counters[index] = { ...id };\n    counters[index].value++;\n    this.setState({ counters });\n  };\n\n  handleDelete = id => {\n    const counters = this.state.counters.filter(c => c.id !== id);\n    this.setState({ counters });\n  };\n\n  handleReset = () => {\n    const counters = this.state.counters.map(c => {\n      c.value = 0;\n      return c;\n    });\n    this.setState({ counters });\n  };\n\n  handleAdd = () => {\n    this.setState({\n      counters: [\n        ...this.state.counters,\n        {\n          id: this.state.counters.filter(c => c.id).length + 1,\n          value: 0\n        }\n      ]\n    });\n  };\n\n  render() {\n    console.log(\"app rendered\");\n\n    return (\n      <React.Fragment>\n        <NavBar items={this.state.counters.filter(c => c.value > 0).length} />\n        <Counters\n          counters={this.state.counters}\n          onReset={this.handleReset}\n          onDelete={this.handleDelete}\n          onIncrement={this.handleIncrement}\n          onAdd={this.handleAdd}\n        />\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}